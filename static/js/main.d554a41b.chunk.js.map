{"version":3,"sources":["App.js","index.js"],"names":["workTime","breakTimeShort","breakTimeLong","Timer","displayTime","t","min","parseInt","toString","sec","length","useState","seconds","setSeconds","pause","setPause","breakCounter","setBreakCounter","onBreak","setOnBreak","clicked","setClicked","showPause","setShowPause","useEffect","countDown","setTimeout","startWork","startBreak","document","body","style","setBreakTime","menuClick","el","querySelector","classList","remove","add","adjustTimeButton","operator","timeType","display","cursor","float","marginRight","onClick","adjustedTime","adjustTime","className","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d554a41b.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nvar workTime = 25 * 60;\nvar breakTimeShort = 5 * 60;\nvar breakTimeLong = 15 * 60;\n\nconst Timer = () => {\n  // parse time\n  const displayTime = (t) => {\n    const min = parseInt(t / 60).toString();\n    const sec = (t % 60).toString();\n    const time =\n      (min.length === 1 ? \"0\" + min : min) +\n      \":\" +\n      (sec.length === 1 ? \"0\" + sec : sec);\n    return time;\n  };\n\n  const [seconds, setSeconds] = useState(workTime);\n  const [pause, setPause] = useState(true);\n  const [breakCounter, setBreakCounter] = useState(0);\n  const [onBreak, setOnBreak] = useState(false);\n  const [clicked, setClicked] = useState(false);\n  const [showPause, setShowPause] = useState(false);\n\n  useEffect(() => {\n    !pause && countDown();\n  });\n\n  // main operating function\n  const countDown = () => {\n    seconds > 0\n      ? setTimeout(() => setSeconds(seconds - 1), 1000)\n      : (() => {\n          setShowPause(false);\n          setClicked(false);\n          setPause(true);\n          breakCounter > 3 && setBreakCounter(0);\n          return onBreak ? startWork() : startBreak();\n        })();\n  };\n  const startBreak = () => {\n    setBreakCounter(breakCounter + 1);\n    breakCounter < 3\n      ? (document.body.style = \"background: #4598b4;\")\n      : (document.body.style = \"background: #7fc023;\");\n    setOnBreak(true);\n    setSeconds(setBreakTime());\n    //setShowPause(true);\n  };\n  const startWork = () => {\n    document.body.style = \"background: #FF5738;\";\n    setOnBreak(false);\n    setSeconds(workTime);\n    //setShowPause(true);\n  };\n\n  const setBreakTime = () => {\n    return breakCounter < 3 ? breakTimeShort : breakTimeLong;\n  };\n\n  // skips timer seconds to 3\n  const skipButton = () => {\n    return (\n      <button\n        className=\"test-button\"\n        onClick={() => {\n          setPause(true);\n          setShowPause(false);\n          setTimeout(() => {\n            setSeconds(3);\n            setClicked(true);\n            setPause(false);\n          }, 1000);\n        }}\n      >\n        skip\n      </button>\n    );\n  };\n  const pauseButton = () => {\n    return (\n      <button\n        className=\"pause-button\"\n        onClick={() => {\n          setPause(!pause);\n        }}\n      >\n        {pause ? (!onBreak ? \"work\" : \"break\") : \"pause\"}\n      </button>\n    );\n  };\n  const working = () => {\n    return (\n      <>\n        <h2>\n          {pause ? \"Paused\" : \"Working\"} {displayTime(seconds)}\n        </h2>\n        {!clicked && (\n          <button\n            onClick={() => {\n              setPause(false);\n              setClicked(true);\n              setShowPause(true);\n            }}\n          >\n            Start Work\n          </button>\n        )}\n        {/* todo move pause btn here */}\n      </>\n    );\n  };\n  const takingBreak = () => {\n    return (\n      <>\n        <div className=\"break-counter\">break number {breakCounter}</div>\n        <h2>\n          {pause\n            ? \"Paused \"\n            : breakCounter <= 3\n            ? \"Short Break \"\n            : \"Long Break \"}\n          {displayTime(seconds)}\n        </h2>\n        {!clicked && (\n          <button\n            onClick={() => {\n              setPause(false);\n              setClicked(true);\n              setShowPause(true);\n            }}\n          >\n            Start break\n          </button>\n        )}\n      </>\n    );\n  };\n  const menuClick = () => {\n    //setShowMenu(!showMenu);\n    var el = document.querySelector(\".hamburger-clicked\");\n    if (!el) {\n      el = document\n        .querySelector(\".hamburger\")\n        .classList.add(\"hamburger-clicked\");\n      document.querySelector(\".menu-items\").classList.add(\"show\");\n    } else {\n      el.classList.remove(\"hamburger-clicked\");\n      document.querySelector(\".menu-items\").classList.remove(\"show\");\n    }\n  };\n  const adjustTime = (operator, timeType) => {\n    var adjustedTime;\n    if (timeType === \"workTime\") {\n      operator === \"+\"\n        ? (workTime = workTime + 60)\n        : (workTime = workTime - 60);\n      adjustedTime = workTime;\n    } else if (timeType === \"breakTimeShort\") {\n      operator === \"+\"\n        ? (breakTimeShort = breakTimeShort + 60)\n        : (breakTimeShort = breakTimeShort - 60);\n      adjustedTime = breakTimeShort;\n    } else if (timeType === \"breakTimeLong\") {\n      operator === \"+\"\n        ? (breakTimeLong = breakTimeLong + 60)\n        : (breakTimeLong = breakTimeLong - 60);\n      adjustedTime = breakTimeLong;\n    }\n\n    !onBreak && setSeconds(adjustedTime); // this is not working as intended\n    onBreak && setSeconds(adjustedTime);\n  };\n  const adjustTimeButton = (operator, timeType) => {\n    var style = {\n      display: \"inline-block\",\n      cursor: \"pointer\",\n      float: \"right\",\n      marginRight: \"5px\",\n    };\n    /* if (operator === \"-\") {\n      style[\"marginRight\"] = \"5px\";\n    } else {\n      style[\"marginRight\"] = \"5px\";\n    } */\n    return (\n      <div\n        style={style}\n        onClick={() => {\n          adjustTime(operator, timeType);\n        }}\n      >\n        {operator}\n      </div>\n    );\n  };\n\n  const menu = () => {\n    return (\n      <div className=\"menu\">\n        <div className=\"hamburger\" onClick={menuClick}>\n          <div className=\"bar1\"></div>\n          <div className=\"bar2\"></div>\n          <div className=\"bar3\"></div>\n        </div>\n\n        <div className=\"menu-items\">\n          <div>\n            {adjustTimeButton(\"+\", \"workTime\")}\n            {adjustTimeButton(\"-\", \"workTime\")}\n            worktime{\" \"}\n            <div\n              style={{\n                display: \"inline-block\",\n                marginRight: \"5px\",\n                float: \"right\",\n              }}\n            >\n              {workTime / 60}\n            </div>\n            {/* dynamic time ?? worktime {parseInt(seconds / 60)\n                OR plus 1 min\n              */}\n          </div>\n          <div>\n            {adjustTimeButton(\"+\", \"breakTimeShort\")}\n            {adjustTimeButton(\"-\", \"breakTimeShort\")}short break{\" \"}\n            <div\n              style={{\n                display: \"inline-block\",\n                marginRight: \"5px\",\n                float: \"right\",\n              }}\n            >\n              {breakTimeShort / 60}\n            </div>\n          </div>\n          <div>\n            {adjustTimeButton(\"+\", \"breakTimeLong\")}\n            {adjustTimeButton(\"-\", \"breakTimeLong\")}long break{\" \"}\n            <div\n              style={{\n                display: \"inline-block\",\n                marginRight: \"5px\",\n                float: \"right\",\n              }}\n            >\n              {breakTimeLong / 60}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <>\n      {pause && menu()}\n      <div className=\"timer\">\n        {skipButton()}\n        {showPause && pauseButton()}\n        {onBreak ? takingBreak() : working()}\n      </div>\n    </>\n  );\n};\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">Pomodoro timer</header>\n      <p className=\"description\">time your work for efficiency</p>\n      <Timer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}